// Place your key bindings in this file to override the defaults
[
    // General
    {
        "key": "alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+j",
        "command": "editor.action.copyLinesDownAction",
        "when": "(vim.mode == 'VisualLine' || vim.mode == 'Normal') && editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },

    // Navigation
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "vim.mode == 'Normal' && !inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "vim.mode == 'Normal' && !inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "vim.mode == 'Normal' && !inQuickOpen"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "vim.mode == 'Normal' && !inQuickOpen"
    },
    {
        "key": "tab",
        "command": "workbench.action.nextEditorInGroup",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "vim.mode == 'Insert' && suggestWidgetVisible && editorTextFocus"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "vim.mode == 'Insert' && suggestWidgetVisible && editorTextFocus"
    },
    {
        "key": "tab",
        "command": "editor.action.indentLines",
        "when": "vim.mode == 'VisualLine' && editorTextFocus"
    },
    {
        "key": "shift+tab",
        "command": "editor.action.outdentLines",
        "when": "vim.mode == 'VisualLine' && editorTextFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },

    // Editors actions
    {
        "key": "ctrl+n",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "alt+f",
        "command": "editor.action.inlineSuggest.commit",
        "when": "vim.mode == 'Insert' && inlineSuggestionVisible && tabnine.tab-override && !editorTabMovesFocus"
    },
    {
        "key": "ctrl+e",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "space ,",
        "command": "workbench.action.showAllEditors",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space /",
        "command": "editor.action.commentLine",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && editorTextFocus"
    },
    {
        "key": "space x",
        "command": "workbench.action.closeActiveEditor",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
    },
    {
        "key": "space shift-x",
        "command": "workbench.action.closeOtherEditors",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
    },
    {
        "key": "space e",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space c",
        "command": "workbench.action.showCommands",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space w",
        "command": "workbench.action.files.save",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space r r",
        "command": "code-runner.run",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },

    // Split editors
    {
        "key": "space s h",
        "command": "workbench.action.splitEditor",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space s v",
        "command": "workbench.action.splitEditorDown",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },

    // Coding
    {
        "key": "shift+k",
        "command": "editor.action.showHover",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space l a",
        "command": "editor.action.codeAction",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space l r",
        "command": "editor.action.rename",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space l s",
        "command": "workbench.action.gotoSymbol",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space g d",
        "command": "editor.action.revealDefinition",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space g r",
        "command": "editor.action.goToReferences",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space g i",
        "command": "editor.action.goToImplementation",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },

    // Views
    {
        "key": "space v f",
        "command": "workbench.action.findInFiles",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space v g",
        "command": "workbench.view.scm",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space v e",
        "command": "workbench.view.explorer",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space v x",
        "command": "workbench.view.extensions",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },

    // File explorer
    {
        "key": "r",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "c",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+s",
        "command": "runCommands",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "args": {
            "commands": [
                "workbench.action.splitEditorDown",
                "explorer.openAndPassFocus",
                "workbench.action.closeOtherEditors"
            ]
        }
    },
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
    },

    // Debug
    {
        "key": "space d a",
        "command": "workbench.action.debug.selectandstart",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && debuggersAvailable"
    },
    {
        "key": "space d t",
        "command": "workbench.action.debug.stop",
        "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && !focusedSessionIsAttached"
    },
    {
        "key": "space d o",
        "command": "workbench.action.debug.stepOver",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
    },
    {
        "key": "space d b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    {
        "key": "space d e",
        "command": "editor.debug.action.showDebugHover",
        "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && debugState == 'stopped'"
    },
    {
        "key": "space d c",
        "command": "workbench.action.debug.continue",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
    },

    // Remove some default keybindings
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionVisible && tabnine.tab-override && !editorTabMovesFocus"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "alt+f",
        "command": "-tabnine.chat.commands.refine",
        "when": "editorTextFocus"
    }
]
